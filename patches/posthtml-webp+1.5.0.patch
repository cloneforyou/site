diff --git a/node_modules/posthtml-webp/lib/index.js b/node_modules/posthtml-webp/lib/index.js
old mode 100644
new mode 100755
index b764fd2..2a1d1f8
--- a/node_modules/posthtml-webp/lib/index.js
+++ b/node_modules/posthtml-webp/lib/index.js
@@ -13,6 +13,14 @@ module.exports = function (options) {
     options.extensionIgnore = []
   }
 
+  if (options.domainIgnore === undefined) {
+    options.domainIgnore = []
+  }
+
+  if (options.domainIgnore === undefined) {
+    options.domainIgnore = []
+  }
+
   if (options.replaceExtension === undefined) {
     options.replaceExtension = false
   }
@@ -20,11 +28,12 @@ module.exports = function (options) {
   return function posthtmlWebp (tree) {
     tree.match([{ tag: 'img' }, { tag: 'amp-img' }], function (imgNode) {
       if (imgNode.skip) return imgNode
-      var classes = imgNode.attrs && imgNode.attrs.class && (imgNode.attrs.class.split(' ') || [])
+      var classes = (imgNode.attrs && imgNode.attrs.class && imgNode.attrs.class.split(' ')) || []
       var extension = imgNode.attrs.src.split('.').pop()
       var isIgnoredByClass = options.classIgnore.filter(className => classes.includes(className)).length > 0
       var isIgnoredByExtension = options.extensionIgnore.filter(fileExtension => fileExtension === extension).length > 0
-      var isIgnore = isIgnoredByClass || isIgnoredByExtension
+      var isIgnoredByDomain = options.domainIgnore.some(d => {try {return imgNode.attrs.src.includes(d)} catch (error) {throw new Error(JSON.stringify(imgNode.attrs, undefined, 4))}})
+      var isIgnore = isIgnoredByClass || isIgnoredByExtension || isIgnoredByDomain
       if (isIgnore) return imgNode
       switch (imgNode.tag) {
         case 'amp-img':
@@ -83,11 +92,11 @@ function getPicture (imgNode, options) {
     .concat(src)
     .filter(Boolean)
     .map(value => {
-      value = value.trim().split(/\s/)
-      var path = options.replaceExtension ? removeExtension(value[0]) : value[0]
-      var size = value[1]
+      var [pathAndQuery, size] = value.trim().split(/\s/)
+      var [path, query] = pathAndQuery.split("?");
+      var cleanedPath = options.replaceExtension ? removeExtension(path) : path
 
-      return [path + '.webp', size].filter(Boolean).join(' ')
+      return [cleanedPath + '.webp' + (query ? `?${query}` : ""), size].filter(Boolean).join(' ')
     })
     .join(', ')
 