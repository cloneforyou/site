diff --git a/node_modules/eleventy-plugin-lazyimages/.eleventy.js b/node_modules/eleventy-plugin-lazyimages/.eleventy.js
index 1869755..031812c 100755
--- a/node_modules/eleventy-plugin-lazyimages/.eleventy.js
+++ b/node_modules/eleventy-plugin-lazyimages/.eleventy.js
@@ -2,7 +2,7 @@ const fs = require('fs');
 const { JSDOM } = require('jsdom');
 const Jimp = require('jimp');
 
-const transformImgPath = (src) => {
+const transformImgPath = src => {
   if (src.startsWith('/') && !src.startsWith('//')) {
     return `.${src}`;
   }
@@ -25,7 +25,7 @@ const defaultLazyImagesConfig = {
 let lazyImagesConfig = defaultLazyImagesConfig;
 let lazyImagesCache = {};
 
-const logMessage = (message) => {
+const logMessage = message => {
   console.log(`LazyImages - ${message}`);
 };
 
@@ -41,12 +41,12 @@ const loadCache = () => {
       const cachedData = fs.readFileSync(cacheFile, 'utf8');
       lazyImagesCache = JSON.parse(cachedData);
     }
-  } catch(e) {
+  } catch (e) {
     console.error('LazyImages: cacheFile', e);
   }
 };
 
-const readCache = (imageSrc) => {
+const readCache = imageSrc => {
   if (imageSrc in lazyImagesCache) {
     return lazyImagesCache[imageSrc];
   }
@@ -61,7 +61,7 @@ const updateCache = (imageSrc, imageData) => {
   if (cacheFile) {
     const cacheData = JSON.stringify(lazyImagesCache);
 
-    fs.writeFile(cacheFile, cacheData, (err) => {  
+    fs.writeFile(cacheFile, cacheData, err => {
       if (err) {
         console.error('LazyImages: cacheFile', e);
       }
@@ -120,7 +120,7 @@ const processImage = async imgElem => {
   }
 
   try {
-    const image = await getImageData(imgPath);
+    const image = await getImageData(imgPath.split('?')[0]);
 
     imgElem.setAttribute('width', image.width);
     imgElem.setAttribute('height', image.height);
